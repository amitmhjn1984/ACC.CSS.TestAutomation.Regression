package com.acc.regression.users;

import org.json.simple.JSONObject;

import com.acc.regression.InitializeTest;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.jayway.restassured.response.Response;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import org.junit.Assert;
import static com.jayway.restassured.RestAssured.given;

@SuppressWarnings("unchecked")
public class UserRestore extends InitializeTest {
	String endpoint = null;
	String userId = null;
	JSONObject forgotPassword = new JSONObject();

	Response postForgotPasswordResponse;

	@Given("^Anna wants to restore MyACC portal credentials \"([^\"]*)\" on \"([^\"]*)\"$")
	public void anna_wants_to_restore_MyACC_portal_credentials_on(String RequestType, String endpoint)
			throws Throwable {
		this.endpoint = endpoint;

	}

	@When("^Anna pass forgot password information \"([^\"]*)\" \"([^\"]*)\"$")
	public void anna_pass_forgot_password_information(String email, String phoneNumber) throws Throwable {

		forgotPassword.put("email", email);
		forgotPassword.put("phoneNumber", phoneNumber);

		ObjectMapper mapper = new ObjectMapper();
		System.out.println("This is the post body");
		System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(forgotPassword));

		postForgotPasswordResponse = given().proxy("webproxy.ds.acc.co.nz", 8080).relaxedHTTPSValidation()
				.urlEncodingEnabled(false).contentType("application/json").body(forgotPassword).when()
				.post(this.endpoint);

		// System.out.println(putAccountInformationResponse.jsonPath().prettyPrint());
		if (postForgotPasswordResponse.statusCode() != 200) {
			System.out.println("Unable to update the credential information Status Code--->"
					+ postForgotPasswordResponse.statusCode());

		}
	}

	@Then("^Anna should see the request returning '(\\d+)' with \"([^\"]*)\" for forgot password$")
	public void anna_should_see_the_request_returning_with_for_forgot_password(int expectedstatuscode,
			String expectedStatusMessage) throws Throwable {

		System.out.println("Returned Status code for the request - " + postForgotPasswordResponse.statusCode());

		System.out
				.println("Put Account status message - " + postForgotPasswordResponse.body().jsonPath().get("message"));

		Assert.assertTrue("UserAccount Service is Running fine",
				expectedstatuscode == postForgotPasswordResponse.statusCode());

	}

}