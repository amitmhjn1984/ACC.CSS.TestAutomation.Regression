//package com.acc.regression.users;
//
//import java.net.URLEncoder;
//
//import java.util.ArrayList;
//import java.util.List;
//import java.util.Map;
//import java.util.concurrent.ThreadLocalRandom;
//import java.util.regex.Matcher;
//import java.util.regex.Pattern;
//
//import org.json.simple.JSONArray;
//import org.json.simple.JSONObject;
//import org.json.simple.parser.JSONParser;
//import org.json.simple.parser.ParseException;
//
//import com.acc.regression.GetJWT;
//import com.acc.regression.GetUser;
//import com.acc.regression.InitializeTest;
//import com.fasterxml.jackson.core.JsonFactory;
//import com.fasterxml.jackson.databind.ObjectMapper;
//import com.jayway.restassured.RestAssured;
//import com.jayway.restassured.response.Response;
//import com.jayway.restassured.specification.RequestSpecification;
//
//import cucumber.api.java.en.Given;
//import cucumber.api.java.en.Then;
//import cucumber.api.java.en.When;
//import org.junit.Assert;
//import static com.jayway.restassured.RestAssured.given;
//import static io.restassured.path.json.JsonPath.from;
//
//
//
//    @SuppressWarnings("unchecked")
//    public class UserAddressService extends InitializeTest {
//    	String endpoint=null;
//    	String userId= null;
//    	String token = null;
//    	boolean flagPassFail= false;
//        JSONObject address = new JSONObject();
//        JSONObject addresses = new JSONObject();
//        JSONArray addressesArray = new JSONArray();
//        
//    	JSONObject jsonObject1 = null;
//    	JSONObject jsonObject2 = null;
//        
//        Response getAddressInformationResponse;
//        Response putAddressInformationResponse;
//
//        List <String> type = new ArrayList<String>();
//        List <String> line1 = new ArrayList<String>();
//        List <String> line2 = new ArrayList<String>();
//        List <String> suburb = new ArrayList<String>();
//        List <String> city = new ArrayList<String>();
//        List <String> postCode = new ArrayList<String>();
//        List <String> country = new ArrayList<String>();
//
//	@Given("^Anna is ACC user with existing address, test case description \"([^\"]*)\"$")
//	public void anna_is_existing_ACC_user_with_existing_address(String testCondition) throws Throwable {
//
//		GetUser user = new GetUser();
//		user.selectRandomUser();
//		this.userId = accUser;
//
//		GetJWT JWT = new GetJWT();
//		token = JWT.getToken(this.userId);
//	}
//
//	@Given("^Anna get address information$")
//	public void Anna_get_address_information() throws Throwable {
//
//		this.endpoint = "api/v1/users/" + this.userId + "/addresses";
//
//        	getAddressInformationResponse = 	given().
//        											header("X-Authorization", token).
//						            				relaxedHTTPSValidation().
//						            				urlEncodingEnabled(false).
//						            				contentType("application/json").
//						            			when().
//						            				get(this.endpoint);
//        	
//        	
//		if ((getAddressInformationResponse.statusCode() != 200)
//				|| (getAddressInformationResponse.statusCode() == 404)) {
//			System.out.println("Unable to get the address information for UserId--->" + this.userId);
//			System.out.println("Status Code--->" + getAddressInformationResponse.statusCode());
//			System.out.println("Status Code--->" + getAddressInformationResponse.jsonPath().prettyPrint());
//
//		} else
//			setAddressInformation();
//
//	}
//
//	@When("^Anna update ACC address \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" information$")
//	public void anna_update_ACC_address_information(String type, String line1, String line2, String suburb, String city,
//			String postCode, String country) throws Throwable {
//
//		if (!type.equals(""))
//			address.put("type", type);
//
//		if (!line1.equals(""))
//			address.put("line1", line1);
//
//		if (!line2.equals(""))
//			address.put("line2", line2);
//
//		if (!suburb.equals(""))
//			address.put("suburb", suburb);
//
//		if (!city.equals(""))
//			address.put("city", city);
//
//		if (!postCode.equals(""))
//			address.put("postCode", postCode);
//
//		if (!country.equals(""))
//			address.put("country", country);
//
//		this.type = getAddressInformationResponse.jsonPath().getList("type");
//		int index = this.type.indexOf(type);
//		if (index != -1) {
//			addressesArray.remove(index);
//		}
//
//		addressesArray.add(address);
//		addresses.put("addresses", addressesArray);
//
//		ObjectMapper mapper = new ObjectMapper();
//		System.out.println(mapper.writerWithDefaultPrettyPrinter().writeValueAsString(addresses));
//
//             putAddressInformationResponse = 	given().
//            		 								header("X-Authorization", token).
//					            		 			relaxedHTTPSValidation().
//					            		 			urlEncodingEnabled(false).
//					            		 			contentType("application/json").
//					            		 			body(addresses).
//					            		 		when().
//					            		 			put(this.endpoint);
//             
//		// System.out.println(putAddressInformationResponse.asString());
//		if (putAddressInformationResponse.statusCode() != 200) {
//			System.out.println("Unable to update the account information Status Code--->"
//					+ putAddressInformationResponse.statusCode());
//
//		}
//	}
//
//	@Then("^Anna should see the request returning '(\\d+)' with \"([^\"]*)\" for address$")
//	public void Anna_should_see_the_request_returning_with_for_address(int expectedstatuscode, String statusmessage)
//			throws Throwable {
//
//		System.out.println("Returned Status code for the request - " + putAddressInformationResponse.statusCode());
//		System.out.println(putAddressInformationResponse.jsonPath().prettyPrint());
//
//		Assert.assertTrue("UserAddress Service is NOT Running fine",
//				expectedstatuscode == putAddressInformationResponse.statusCode());
//		if(putAddressInformationResponse.statusCode()!=200){
//			Assert.assertTrue("UserAddress error message does not match",putAddressInformationResponse.body().jsonPath().get("message").toString().contains(statusmessage));
//		}
//	}
//
//	@Then("^Anna is able to view updated address information$")
//	public void anna_is_able_to_view_updated_address_information() throws Throwable {
//		if(putAddressInformationResponse.statusCode()==200){
//			int passCounter=0;
//        	getAddressInformationResponse = 	given().
//        											header("X-Authorization", token).
//								    				relaxedHTTPSValidation().
//								    				urlEncodingEnabled(false).
//								    				contentType("application/json").
//								    			when().
//								    				get(this.endpoint);
//        	
//        	JSONArray getUpdatedResponses = new JSONArray();
//        	//JSONArray putUpdatedResponses = new JSONArray();
//        	
//        	List<String> putUpdatedResponses = new ArrayList<String>();
//        	putUpdatedResponses = from(putAddressInformationResponse.asString()).getList("addresses");
//        	
//        	JSONParser parser = new JSONParser();
//			getUpdatedResponses = (JSONArray) parser.parse(getAddressInformationResponse.body().asString());
//
//			
//			//putUpdatedResponses = (JSONArray) parser.parse(putAddressInformationResponse.body().jsonPath().getList("addresses").toString());
//        	
//			for(Object getUpdatedResponse: getUpdatedResponses ){
//				System.out.println("GET"+getUpdatedResponse.toString().replaceAll("\"", "").replaceAll(" ", ""));
//				for(Object putUpdatedResponse: putUpdatedResponses ){
//					System.out.println("PUT"+putUpdatedResponse.toString().replaceAll("=", ":").replaceAll(" ", ""));
//					if(putUpdatedResponse.toString().replaceAll("=", ":").replaceAll(" ", "").contains(getUpdatedResponse.toString().replaceAll("\"", "").replaceAll(" ", ""))){
//						System.out.println("Result Match");
//						passCounter++;
//						this.flagPassFail = true;
//					}
//					
//				}
//			}
//		Assert.assertTrue(flagPassFail);	
//		//Assert.assertEquals(getUpdatedResponses.size(), passCounter);
//		}
//		
//
//	}
//        
//	public void setAddressInformation() throws ParseException {
//
//		if (getAddressInformationResponse.statusCode() != 404) {
//			String getAddressesString = getAddressInformationResponse.asString();
//
//			JSONParser parser = new JSONParser();
//			this.addressesArray = (JSONArray) parser.parse(getAddressesString);
//
//		}
//	}
//
//}